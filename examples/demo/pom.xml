<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <groupId>club.javafamily</groupId>
      <artifactId>javafamily-parent</artifactId>
      <version>2.3.2-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <artifactId>demo</artifactId>
   <groupId>org.example</groupId>

   <dependencies>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-redis</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-jpa</artifactId>
      </dependency>

      <dependency>
         <groupId>org.postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <scope>runtime</scope>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-configuration-processor</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.junit.vintage</groupId>
               <artifactId>junit-vintage-engine</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
   </dependencies>

   <version>1.0-SNAPSHOT</version>

   <distributionManagement>
      <snapshotRepository>
         <id>javafamily-central</id>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </snapshotRepository>
      <repository>
         <id>javafamily-central</id>
         <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
      </repository>
   </distributionManagement>

   <repositories>
      <repository>
         <id>javafamily-central</id>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
         <releases>
            <updatePolicy>always</updatePolicy>
         </releases>
         <snapshots>
            <updatePolicy>always</updatePolicy>
         </snapshots>
      </repository>
   </repositories>

   <build>
      <finalName>demo</finalName>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <executions>
                  <execution>
                     <id>attach-sources</id>
                     <goals>
                        <goal>jar-no-fork</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <executions>
                  <execution>
                     <id>attach-javadocs</id>
                     <goals>
                        <goal>jar</goal>
                     </goals>
                  </execution>
               </executions>
               <configuration>
                  <source>${java.version}</source>
                  <additionalJOption>-Xdoclint:none</additionalJOption>
                  <failOnError>false</failOnError>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.sonatype.plugins</groupId>
               <artifactId>nexus-staging-maven-plugin</artifactId>
               <!-- autoReleaseAfterClose的值为true，则脚本会自动完成在平台上close、release的操作，至此你将成功发布了 -->
               <extensions>true</extensions>
               <configuration>
                  <serverId>javafamily-central</serverId>
                  <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                  <autoReleaseAfterClose>true</autoReleaseAfterClose>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <configuration>
                  <autoVersionSubmodules>true</autoVersionSubmodules>
                  <useReleaseProfile>false</useReleaseProfile>
                  <releaseProfiles>release</releaseProfiles>
                  <goals>deploy</goals>
               </configuration>
            </plugin>

            <!--  必须配置GPG插件用于使用以下配置对组件进行签名 -->
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-gpg-plugin</artifactId>
               <executions>
                  <execution>
                     <id>sign-artifacts</id>
                     <phase>verify</phase>
                     <goals>
                        <goal>sign</goal>
                     </goals>
                  </execution>
               </executions>
               <configuration>
                  <keyname>46A46638E7A4C988603988FC9A698D0385DD4339</keyname>
                  <passphrase>dreamLi0812!@#</passphrase>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
               <skip>false</skip>
            </configuration>
            <executions>
               <execution>
                  <id>repackage</id>
                  <goals>
                     <goal>repackage</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>default</id>
                  <phase>verify</phase>
                  <goals>
                     <goal>build</goal>
                     <goal>push</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <!--镜像仓库地址 -->
               <repository>161.189.222.190:8080/mlog/demo</repository>
               <!--镜像tag -->
               <tag>${project.version}</tag>
               <!--镜像仓库用户名和密码 -->
               <username>pushuser</username>
               <password>yiJi123!@#</password>

               <!--自定义构建参数，可传递到Dockerfile文件中 -->
               <buildArgs>
                  <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
               </buildArgs>

               <noCache>true</noCache>
               <dockerfile>${basedir}/Dockerfile</dockerfile>
               <contextDirectory>${basedir}</contextDirectory>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
         </plugin>

      </plugins>
   </build>

</project>
